# 워크플로우 이름
name: Deploy Kostai App to S3 and CloudFront

# 실행 조건: main 브랜치에 push가 발생했을 때
on:
  push:
    branches:
      - main

# 실행될 작업 정의
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # 실행 환경
    permissions:
      id-token: write # OIDC 인증에 필요
      contents: read  # 코드 체크아웃에 필요

    steps:
      # 1. 리포지토리 코드 가져오기
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Node.js 환경 설정
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      # 3. 의존성 설치
      - name: Install dependencies
        run: npm ci

      # 4. 환경 변수 설정 (GitHub Secrets 사용)
      - name: Create .env file
        run: |
          echo "REACT_APP_API_GATEWAY_BASE=${{ secrets.REACT_APP_API_GATEWAY_BASE }}" >> .env
          echo "REACT_APP_PUBLIC_KEY=\"${{ secrets.REACT_APP_PUBLIC_KEY }}\"" >> .env
          # 추가할 변수가 있다면 계속해서 추가합니다.
          # echo "REACT_APP_ANOTHER_KEY=${{ secrets.REACT_APP_ANOTHER_KEY }}" >> .env
        env:
          REACT_APP_API_GATEWAY_BASE: ${{ secrets.REACT_APP_API_GATEWAY_BASE }}
          # 사용하는 모든 환경 변수를 GitHub Secrets에 등록하고 여기에 추가해야 합니다.

      # 5. React 앱 빌드
      - name: Build React app
        run: npm run build

      # 6. AWS 자격 증명 설정 (OIDC)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 7. S3 버킷에 빌드 결과물 업로드
      - name: Sync files to S3
        run: |
          aws s3 sync ./build s3://${{ secrets.S3_BUCKET_NAME }} --delete

      # 8. CloudFront 캐시 무효화 (사용자가 즉시 변경사항을 볼 수 있도록 함)
      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"